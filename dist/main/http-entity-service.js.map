{"version":3,"sources":["../../src/main/http-entity-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6EAA0D;AAE1D,uEAAoE;AACpE,2DAAiF;AAGjF,IAAsB,iBAAiB;IAYnC,2BAAmB,kBAA0C,EAAE,UAAsB;QAN9E,uBAAkB,GAAW,MAAM,CAAC;QAEpC,mBAAc,GAAW,MAAM,CAAC;QAEhC,kBAAa,GAAW,OAAO,CAAC;QAGnC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAEM,mCAAO,GAAd,UAAe,KAAgC,EAAE,KAAiB,EAAE,IAAgB,EAAE,OAAgC,EAAE,UAAqB;QAA9H,sBAAA,EAAA,YAAmB,iCAAW,EAAE;QAAE,sBAAA,EAAA,SAAiB;QAAE,qBAAA,EAAA,QAAgB;QAAE,wBAAA,EAAA,cAAuB,6BAAO,EAAE;QAClH,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAI,IAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAC7G,CAAC;IAEM,mCAAO,GAAd,UAAe,KAAgC,EAAE,IAAgB,EAAE,OAAgC,EAAE,UAAqB;QAA3G,sBAAA,EAAA,YAAmB,iCAAW,EAAE;QAAE,qBAAA,EAAA,QAAgB;QAAE,wBAAA,EAAA,cAAuB,6BAAO,EAAE;QAC/F,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAI,IAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IACtG,CAAC;IAEM,iCAAK,GAAZ,UAAa,KAAgC,EAAE,KAAiB,EAAE,IAAgB;QAArE,sBAAA,EAAA,YAAmB,iCAAW,EAAE;QAAE,sBAAA,EAAA,SAAiB;QAAE,qBAAA,EAAA,QAAgB;QAC9E,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAI,IAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACtF,CAAC;IAEM,+BAAG,GAAV,UAAW,MAAc,EAAE,UAAqB;QAC5C,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAI,IAAI,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IACpF,CAAC;IAEM,gCAAI,GAAX,UAAe,MAAS,EAAE,UAAqB;QAC3C,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAI,IAAI,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IACrF,CAAC;IAEM,kCAAM,GAAb,UAAc,MAAS;QACnB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAI,IAAI,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,iDAAsB,CAAC,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;IACrJ,CAAC;IAES,+CAAmB,GAA7B,UAA8B,MAAS;QACnC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAES,yCAAa,GAAvB;QACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAEL,wBAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDqB,iBAAiB;IADtC,yCAAU;qCAagC,iDAAsB;GAZ3C,iBAAiB,CAiDtC;AAjDqB,8CAAiB","file":"http-entity-service.js","sourcesContent":["import { autoinject } from \"aurelia-dependency-injection\";\nimport { CancelablePromise } from \"aurelia-utils\";\nimport { HttpPersistenceManager } from \"./http-persistence-manager\";\nimport { EntityService, FilterQuery, Query, Sorting } from \"aurelia-persistence\";\n\n@autoinject\nexport abstract class HttpEntityService<E extends Object> implements EntityService<E> {\n\n    protected persistenceManager: HttpPersistenceManager;\n\n    protected entityType: new() => E;\n\n    public collectionRelation: string = \"list\";\n\n    public entityRelation: string = \"self\";\n\n    public countRelation: string = \"count\";\n\n    public constructor(persistenceManager: HttpPersistenceManager, entityType: new() => E) {\n        this.persistenceManager = persistenceManager;\n        this.entityType = entityType;\n    }\n\n    public findAll(query: Query = new FilterQuery(), limit: number = 0, skip: number = 0, sorting: Sorting = new Sorting(), properties?: string[]): CancelablePromise<E[]> {\n        return this.persistenceManager.findAll<E>(this.getEntityType(), query, limit, skip, sorting, properties);\n    }\n\n    public findOne(query: Query = new FilterQuery(), skip: number = 0, sorting: Sorting = new Sorting(), properties?: string[]): CancelablePromise<E> {\n        return this.persistenceManager.findOne<E>(this.getEntityType(), query, skip, sorting, properties);\n    }\n\n    public count(query: Query = new FilterQuery(), limit: number = 0, skip: number = 0): CancelablePromise<number> {\n        return this.persistenceManager.count<E>(this.getEntityType(), query, limit, skip);\n    }\n\n    public get(params: Object, properties?: string[]): CancelablePromise<E> {\n        return this.persistenceManager.get<E>(this.getEntityType(), params, properties);\n    }\n\n    public save<D>(entity: E, properties?: string[]): CancelablePromise<E> {\n        return this.persistenceManager.save<E>(this.getEntityType(), entity, properties);\n    }\n\n    public delete(entity: E): CancelablePromise<void> {\n        return this.persistenceManager.delete<E>(this.getEntityType(), entity, HttpPersistenceManager.ENTITY_RELATION, this.getParamsFromEntity(entity));\n    }\n\n    protected getParamsFromEntity(entity: E): Object {\n        return entity;\n    }\n\n    protected getEntityType(): new() => E {\n        return this.entityType;\n    }\n\n}\n"]}